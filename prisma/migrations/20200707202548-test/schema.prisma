generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model Account {
  color             String?
  confirmed         Boolean  @default(false)
  createdAt         DateTime @default(now())
  email             String   @unique
  id                String   @id @default(cuid())
  lastSeen          DateTime @default(now())
  password          String
  role              Role     @default(USER)
  updatedAt         DateTime @updatedAt
  username          String   @unique
  usernameLowercase String?  @unique
  digits            Int
  rank              Rank
  history           Result[]
  maps              Map[]
  discordLinked     Boolean  @default(false)
}

model Result {
  correct     Int
  corrections Int
  cpm         Int
  createdAt   DateTime @default(now())
  id          String   @id @default(cuid())
  incorrect   Int
  rawCpm      Int
  mode        Mode     @default(Classic)
  mods        Mods[]
  updatedAt   DateTime @updatedAt
  wordIndex   Int
  wpm         Int
  map         Map?     @relation(fields: [mapId], references: [id])
  mapId       String?
  account     Account  @relation(fields: [accountId], references: [id])
  accountId   String
}

model Map {
  createdAt   DateTime    @default(now())
  custom      Boolean?    @default(false)
  difficulty  Difficulty?
  mods        Mods[]
  mode        Mode        @default(Classic)
  id          String      @id @default(cuid())
  name        String
  description String?
  published   Boolean?    @default(false)
  updatedAt   DateTime    @updatedAt
  wordset     String
  results     Result[]
  creator     Account?    @relation(fields: [creatorId], references: [id])
  creatorId   String?
}

enum Difficulty {
  EASY
  NORMAL
  MEDIUM
  HARD
}

enum Role {
  USER
  ADMIN
  PRO
  BETA
}

enum Rank {
  Novice
  Beginner
  Competent
  Proficient
  Expert
  Master
}

enum Mode {
  Classic
  Race
  TimeAttack
  Takedown
}

enum Mods {
  Rush
  Perfectionist
}
