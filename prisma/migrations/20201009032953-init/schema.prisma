generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model Account {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  username      String   @unique
  // color         String?
  confirmed     Boolean  @default(false)
  email         String   @unique
  lastSeen      DateTime @default(now())
  password      String
  role          Role     @default(USER)
  tag           Int
  rank          Rank     @default(Beginner)
  history       Result[]
  maps          Map[]
  discordLinked Boolean  @default(false)
}

model Result {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  correct     Int
  corrections Int
  cpm         Int
  rawCpm      Int
  wpm         Int
  rawWpm      Int
  incorrect   Int
  wordIndex   Int
  letterIndex Int
  history     Int
  punctuated  Boolean  @default(false)
  state       String
  seed        String
  isArcade    Boolean  @default(false)
  mode        Mode     @default(Time)
  slug        String   @default("60")
  mods        Mods[]
  map         Map?     @relation(fields: [mapId], references: [id])
  mapId       String?
  account     Account  @relation(fields: [accountId], references: [id])
  accountId   String
}

model Map {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  custom    Boolean? @default(false)
  updatedAt DateTime @updatedAt
  name      String
  published Boolean? @default(false)
  wordset   String
  results   Result[]
  creator   Account? @relation(fields: [creatorId], references: [id])
  creatorId String?
}

enum Role {
  USER
  ADMIN
  PRO
  BETA
}

enum Rank {
  Novice
  Beginner
  Competent
  Proficient
  Expert
  Master
}

enum Mode {
  Words
  Time
  Takedown
  TimeAttack
}

enum Mods {
  Rush
  Perfectionist
}
