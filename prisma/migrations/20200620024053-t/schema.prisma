generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model Account {
  color             String?
  confirmed         Boolean     @default(false)
  createdAt         DateTime    @default(now())
  email             String      @unique
  id                String      @id @default(cuid())
  lastPlayed        ResultType?
  lastSeen          DateTime    @default(now())
  password          String
  role              Role        @default(USER)
  updatedAt         DateTime    @updatedAt
  username          String      @unique
  usernameLowercase String?     @unique
  digits            Int
  rank              Rank
  history           Result[]
  maps              Map[]
  discordLinked     Boolean     @default(false)
}

model Result {
  correct     Int
  corrections Int
  cpm         Int
  createdAt   DateTime   @default(now())
  id          String     @id @default(cuid())
  incorrect   Int
  rawCpm      Int
  type        ResultType
  updatedAt   DateTime   @updatedAt
  wordIndex   Int
  wpm         Int
  Map         Map?       @relation(fields: [mapId], references: [id])
  mapId       String?
  account     Account    @relation(fields: [accountId], references: [id])
  accountId   String
}

model Map {
  createdAt     DateTime    @default(now())
  custom        Boolean?    @default(false)
  difficulty    Difficulty?
  id            String      @id @default(cuid())
  maxWordLength Int?
  minWordLength Int?
  name          String
  private       Boolean?    @default(false)
  updatedAt     DateTime    @updatedAt
  wordSet       String
  results       Result[]
  owner         Account?    @relation(fields: [ownerId], references: [id])
  ownerId       String?
}

enum ResultType {
  SINGLEPLAYER
  RACE
  TRIAL
}

enum Difficulty {
  EASY
  NORMAL
  MEDIUM
  HARD
}

enum Role {
  USER
  ADMIN
  PRO
  BETA
}

enum Rank {
  Novice
  Beginner
  Competent
  Proficient
  Expert
  Master
}

enum Mode {
  // Random? Standard? Classic?
  Classic
  Rush
  Perfectionist
  // Race? Classic? Endurance?
  Race
  TimeAttack
  Takedown
}
